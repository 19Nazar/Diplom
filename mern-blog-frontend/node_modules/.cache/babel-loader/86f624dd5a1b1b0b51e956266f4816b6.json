{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maier Dan\\\\Desktop\\\\\\u0440\\u0435\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\\\\mern-blog-frontend\\\\src\\\\pages\\\\datchic\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSensorData } from '../../reduxe/slices/sensorActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SensorDataComponent = () => {\n  _s();\n\n  const [isParkingFull, setParkingValue] = useState(false);\n  const dispatch = useDispatch();\n  const sensor = useSelector(state => state.sensor);\n  const state = useSelector(state => state);\n  console.log(\"STATE --> \", state);\n  useEffect(() => {\n    dispatch(fetchSensorData());\n  }, []);\n  useEffect(() => {\n    var _sensor$sensorData, _sensor$sensorData$, _sensor$sensorData2, _sensor$sensorData2$;\n\n    if (sensor !== null && sensor !== void 0 && (_sensor$sensorData = sensor.sensorData) !== null && _sensor$sensorData !== void 0 && (_sensor$sensorData$ = _sensor$sensorData[0]) !== null && _sensor$sensorData$ !== void 0 && _sensor$sensorData$.value) setParkingValue(sensor === null || sensor === void 0 ? void 0 : (_sensor$sensorData2 = sensor.sensorData) === null || _sensor$sensorData2 === void 0 ? void 0 : (_sensor$sensorData2$ = _sensor$sensorData2[0]) === null || _sensor$sensorData2$ === void 0 ? void 0 : _sensor$sensorData2$.value);\n  }, [sensor]);\n  console.log(\"sensor\", sensor);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0414\\u0430\\u043D\\u0456 \\u0434\\u0430\\u0442\\u0447\\u0438\\u043A\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isParkingFull ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0410\\u0420\\u041A\\u041E\\u0412\\u041A\\u0410 \\u041F\\u041E\\u0412\\u041D\\u0410: \\u041C\\u0406\\u0421\\u0426\\u042C \\u041D\\u0415\\u041C\\u0410\\u0404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0423\\u0420\\u0410, \\u0404 \\u041C\\u0406\\u0421\\u0426\\u042F !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 64\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => ({\n//   sensorData: state.sensor.sensorData\n// });\n// const mapDispatchToProps = ({\n//   fetchData: fetchSensorData,\n// })\n// export default SensorDataComponent;\n\n_s(SensorDataComponent, \"NZ3zD6nE4JnwoevXL7XLv6ZqPjQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SensorDataComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorDataComponent\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchSensorData","SensorDataComponent","isParkingFull","setParkingValue","useState","dispatch","sensor","state","console","log","sensorData","value"],"sources":["C:/Users/Maier Dan/Desktop/реализация/mern-blog-frontend/src/pages/datchic/index.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchSensorData } from '../../reduxe/slices/sensorActions';\r\n\r\nexport const SensorDataComponent = () => {\r\n  const [isParkingFull, setParkingValue] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const sensor = useSelector(state => state.sensor);\r\n  const state = useSelector(state => state);\r\n\r\n  console.log(\"STATE --> \", state);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSensorData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sensor?.sensorData?.[0]?.value)\r\n    setParkingValue(sensor?.sensorData?.[0]?.value)\r\n  }, [sensor]);\r\n\r\n  console.log(\"sensor\", sensor);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Дані датчика:</h1>\r\n        {/* {sensor?.sensorData?.map(({id, value}) => (\r\n          <div key={id}>{value}</div>\r\n        ))} */}\r\n        {isParkingFull ? <h1>ПАРКОВКА ПОВНА: МІСЦЬ НЕМАЄ</h1>: <h1>УРА, Є МІСЦЯ !!!</h1>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   sensorData: state.sensor.sensorData\r\n// });\r\n\r\n// const mapDispatchToProps = ({\r\n//   fetchData: fetchSensorData,\r\n// })\r\n\r\n// export default SensorDataComponent;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,mCAAhC;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EACvC,MAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmCC,QAAQ,CAAC,KAAD,CAAjD;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;EACA,MAAMC,KAAK,GAAGR,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAAzB;EAEAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;EAEAV,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,eAAe,EAAhB,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAH,SAAS,CAAC,MAAM;IAAA;;IACd,IAAIS,MAAJ,aAAIA,MAAJ,qCAAIA,MAAM,CAAEI,UAAZ,sEAAI,mBAAqB,CAArB,CAAJ,gDAAI,oBAAyBC,KAA7B,EACAR,eAAe,CAACG,MAAD,aAACA,MAAD,8CAACA,MAAM,CAAEI,UAAT,gFAAC,oBAAqB,CAArB,CAAD,yDAAC,qBAAyBC,KAA1B,CAAf;EACD,CAHQ,EAGN,CAACL,MAAD,CAHM,CAAT;EAKAE,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAKKJ,aAAa,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAyC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAL3D;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA5BM,C,CA8BP;AACA;AACA;AAEA;AACA;AACA;AAEA;;GAtCaD,mB;UAEMH,W,EACFC,W,EACDA,W;;;KAJHE,mB"},"metadata":{},"sourceType":"module"}